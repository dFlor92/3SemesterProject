//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NobiWinClient.LeadService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lead", Namespace="http://schemas.datacontract.org/2004/07/Core")]
    [System.SerializableAttribute()]
    public partial class Lead : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NobiWinClient.LeadService.LeadStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NobiWinClient.LeadService.LeadStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeadStatus", Namespace="http://schemas.datacontract.org/2004/07/Core")]
    public enum LeadStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCalled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Called = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LeadService.ILeadService")]
    public interface ILeadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/All", ReplyAction="http://tempuri.org/ILeadService/AllResponse")]
        System.Collections.Generic.List<NobiWinClient.LeadService.Lead> All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/All", ReplyAction="http://tempuri.org/ILeadService/AllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NobiWinClient.LeadService.Lead>> AllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/AllUncalledLeads", ReplyAction="http://tempuri.org/ILeadService/AllUncalledLeadsResponse")]
        System.Collections.Generic.List<NobiWinClient.LeadService.Lead> AllUncalledLeads();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/AllUncalledLeads", ReplyAction="http://tempuri.org/ILeadService/AllUncalledLeadsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NobiWinClient.LeadService.Lead>> AllUncalledLeadsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Create", ReplyAction="http://tempuri.org/ILeadService/CreateResponse")]
        void Create(NobiWinClient.LeadService.Lead entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Create", ReplyAction="http://tempuri.org/ILeadService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(NobiWinClient.LeadService.Lead entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Read", ReplyAction="http://tempuri.org/ILeadService/ReadResponse")]
        NobiWinClient.LeadService.Lead Read(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Read", ReplyAction="http://tempuri.org/ILeadService/ReadResponse")]
        System.Threading.Tasks.Task<NobiWinClient.LeadService.Lead> ReadAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Update", ReplyAction="http://tempuri.org/ILeadService/UpdateResponse")]
        void Update(NobiWinClient.LeadService.Lead entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Update", ReplyAction="http://tempuri.org/ILeadService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(NobiWinClient.LeadService.Lead entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Delete", ReplyAction="http://tempuri.org/ILeadService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeadService/Delete", ReplyAction="http://tempuri.org/ILeadService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeadServiceChannel : NobiWinClient.LeadService.ILeadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeadServiceClient : System.ServiceModel.ClientBase<NobiWinClient.LeadService.ILeadService>, NobiWinClient.LeadService.ILeadService {
        
        public LeadServiceClient() {
        }
        
        public LeadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<NobiWinClient.LeadService.Lead> All() {
            return base.Channel.All();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NobiWinClient.LeadService.Lead>> AllAsync() {
            return base.Channel.AllAsync();
        }
        
        public System.Collections.Generic.List<NobiWinClient.LeadService.Lead> AllUncalledLeads() {
            return base.Channel.AllUncalledLeads();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NobiWinClient.LeadService.Lead>> AllUncalledLeadsAsync() {
            return base.Channel.AllUncalledLeadsAsync();
        }
        
        public void Create(NobiWinClient.LeadService.Lead entity) {
            base.Channel.Create(entity);
        }
        
        public System.Threading.Tasks.Task CreateAsync(NobiWinClient.LeadService.Lead entity) {
            return base.Channel.CreateAsync(entity);
        }
        
        public NobiWinClient.LeadService.Lead Read(int id) {
            return base.Channel.Read(id);
        }
        
        public System.Threading.Tasks.Task<NobiWinClient.LeadService.Lead> ReadAsync(int id) {
            return base.Channel.ReadAsync(id);
        }
        
        public void Update(NobiWinClient.LeadService.Lead entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(NobiWinClient.LeadService.Lead entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
